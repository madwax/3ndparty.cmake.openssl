cmake_minimum_required( VERSION 3.4.0 )

include( CMakeParseArguments )

project( crypto )

set( TARGET_SOURCE_DIR_TRUE "${OpenSSL_SOURCE_PATH}/crypto" )

set( TARGET_INCLUDE_DIRS ${OpenSLL_INCLUDE_PATH} )
set( TARGET_INCLUDE_DIRS_PRIVATE "${TARGET_SOURCE_DIR_TRUE}" "${TARGET_SOURCE_DIR_TRUE}/asn1" "${TARGET_SOURCE_DIR_TRUE}/evp" "${TARGET_SOURCE_DIR_TRUE}/modes")

set( TARGET_DEFINES "OPENSSL_THREADS" )
set( TARGET_DEFINES_PRIVATE "${OpenSSL_COMPILER_DEFINES}" )

set( TARGET_COMPILE_FLAGS "" )
set( TARGET_COMPILE_FLAGS_PRIVATE "" )

set( TARGET_LINK "" )
set( TARGET_LINK_PRIVATE "" )

set( TARGET_SOURCES "" )

if( WIN32 )
	list( APPEND TARGET_DEFINES DSO_WIN32 WIN32_LEAN_AND_MEAN )
	
	list( APPEND TARGET_LINK "ws2_32" "Crypt32" )
	
endif()


# Because OpenSSL is, well doing silly things we have to create a proper include dir to build everything
file( COPY ${OpenSSL_SOURCE_PATH}/e_os.h DESTINATION ${OpenSLL_INCLUDE_PATH} )
file( COPY ${OpenSSL_SOURCE_PATH}/e_os2.h DESTINATION ${OpenSLL_INCLUDE_PATH}/openssl )

# we hold the sources (.c) under XSRC and headers (.h) under XINC
# we do this as we need to copy headers else the lib will not build.
set( XSRC "" )
set( xINC "" )

# OpenSSL Has a lot of source files so we seperated it.
include( cmake/crypto_sources.cmake )

file( COPY ${XINC} DESTINATION ${OpenSLL_INCLUDE_PATH}/openssl FILES_MATCHING REGEX "\.h$" )
file( COPY ${TARGET_SOURCE_DIR_TRUE}/opensslconf.h.in DESTINATION ${OpenSLL_INCLUDE_PATH}/openssl )

file( READ "${OpenSLL_INCLUDE_PATH}/openssl/opensslconf.h.in" CONF )
set( CONF "
#define OPENSSL_NO_GMP
#define OPENSSL_NO_JPAKE
#define OPENSSL_NO_KRB5
#define OPENSSL_NO_MD2
#define OPENSSL_NO_RFC3779
#define OPENSSL_NO_STORE
#define OPENSSL_NO_DYNAMIC_ENGINE
#define OPENSSL_NO_SCTP
#define OPENSSL_NO_EC_NISTP_64_GCC_128
${CONF}" )
file( WRITE "${OpenSLL_INCLUDE_PATH}/openssl/opensslconf.h" "${CONF}" )

set( BuildInfH " 
#ifndef MK1MF_BUILD
	/* Generated byt crypto.cmake - does it break anything? */
  #define CFLAGS \"\"
  #define PLATFORM \"${CMAKE_SYSTEM_NAME}\"
  #define DATE \"\"
#endif
" )
file( WRITE ${OpenSLL_INCLUDE_PATH}/buildinf.h "${BuildInfH}" )

set( TARGET_SOURCES ${XSRC} ${XINC} )

# As OpenSSL is strupid when it comes to how it handles headers and were they are
# we need to create the projects include dir and copy stuff into it! WHY!

add_library( crypto STATIC ${TARGET_SOURCES} )

target_include_directories( crypto PRIVATE ${TARGET_INCLUDE_DIRS} ${TARGET_INCLUDE_DIRS_PRIVATE} )
target_compile_definitions( crypto PRIVATE ${TARGET_DEFINES} ${TARGET_DEFINES_PRIVATE} )
target_link_libraries( crypto PRIVATE ${TARGET_LINK} ${TARGET_LINK_PRIVATE} )
target_compile_options( crypto PRIVATE ${TARGET_COMPILE_FLAGS} ${TARGET_COMPILE_FLAGS_PRIVATE} )

target_include_directories( crypto PUBLIC ${TARGET_INCLUDE_DIRS} )
target_compile_definitions( crypto PUBLIC ${TARGET_DEFINES} )
target_link_libraries( crypto PUBLIC ${TARGET_LINK} )
target_compile_options( crypto PUBLIC ${TARGET_COMPILE_FLAGS} )